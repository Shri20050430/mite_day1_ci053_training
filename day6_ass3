#include <stdio.h>

// Function to sort seat numbers in ascending order using bubble sort
void sortSeats(int seats[], int n) {
    int temp;
    for (int i = 0; i < n-1; i++) {
        for (int j = i+1; j < n; j++) {
            if (seats[i] > seats[j]) {
                temp = seats[i];
                seats[i] = seats[j];
                seats[j] = temp;
            }
        }
    }
}

// Function to perform binary search for a specific seat number
int binarySearch(int seats[], int n, int seat) {
    int left = 0;
    int right = n - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (seats[mid] == seat) {
            return mid; // Seat found
        } else if (seats[mid] < seat) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1; // Seat not found
}

// Function to display the next available seat
int nextAvailableSeat(int seats[], int n, int current_seat) {
    for (int i = 0; i < n; i++) {
        if (seats[i] > current_seat) {
            return seats[i];
        }
    }
    return -1; // No next available seat
}

int main() {
    int availableSeats[] = {45, 12, 78, 23, 56};
    int n = sizeof(availableSeats) / sizeof(availableSeats[0]);

    sortSeats(availableSeats, n);

    printf("Seats sorted by number:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", availableSeats[i]);
    }
    printf("\n");

    int search_seat = 23;
    printf("\nSearch Seat %d:\n", search_seat);
    int index = binarySearch(availableSeats, n, search_seat);
    if (index != -1) {
        printf("Found: Seat %d (Available)\n", availableSeats[index]);
    } else {
        printf("Seat %d not found.\n", search_seat);
    }

    int next_seat = nextAvailableSeat(availableSeats, n, search_seat);
    if (next_seat != -1) {
        printf("Next Available Seat: %d\n", next_seat);
    } else {
        printf("No next available seat.\n");
    }

    return 0;
}
